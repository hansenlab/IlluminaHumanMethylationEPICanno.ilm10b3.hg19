
R version 3.3.1 Patched (2016-09-30 r71426) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(minfi)
Loading required package: BiocGenerics
Loading required package: parallel

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:parallel’:

    clusterApply, clusterApplyLB, clusterCall, clusterEvalQ,
    clusterExport, clusterMap, parApply, parCapply, parLapply,
    parLapplyLB, parRapply, parSapply, parSapplyLB

The following objects are masked from ‘package:stats’:

    IQR, mad, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, append, as.data.frame, cbind, colnames, do.call,
    duplicated, eval, evalq, Filter, Find, get, grep, grepl, intersect,
    is.unsorted, lapply, lengths, Map, mapply, match, mget, order,
    paste, pmax, pmax.int, pmin, pmin.int, Position, rank, rbind,
    Reduce, rownames, sapply, setdiff, sort, table, tapply, union,
    unique, unsplit, which, which.max, which.min

Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.

Loading required package: lattice
Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:base’:

    colMeans, colSums, expand.grid, rowMeans, rowSums

Loading required package: IRanges
Loading required package: GenomeInfoDb
Loading required package: SummarizedExperiment
Loading required package: Biostrings
Loading required package: XVector
Loading required package: bumphunter
Loading required package: foreach
Loading required package: iterators
Loading required package: locfit
locfit 1.5-9.1 	 2013-03-22
Setting options('download.file.method.GEOquery'='auto')
Setting options('GEOquery.inmemory.gpl'=FALSE)
> manifestFile <- "../../../IlluminaHumanMethylationEPIC_files/data/MethylationEPIC_v-1-0_B2.csv"
> if(!file.exists(manifestFile) || !file.exists("extdata")) {
+     cat("Missing files, quitting\n")
+     q(save = "no")
+ }
> 
> maniTmp <- minfi:::read.manifest.EPIC(manifestFile)
> anno <- maniTmp$manifest
> manifestList <- maniTmp$manifestList
> 
> ## Checking
> library(illuminaio)
> epic <- readIDAT("../../../data_files/Demo_Data_EPIC/200144450018/200144450018_R04C01_Grn.idat")
Error in readIDAT("../../../data_files/Demo_Data_EPIC/200144450018/200144450018_R04C01_Grn.idat") : 
  Unable to find file ../../../data_files/Demo_Data_EPIC/200144450018/200144450018_R04C01_Grn.idat
recover called non-interactively; frames dumped, use debugger() to view
> address.epic <- as.character(epic$MidBlock)
Error: object 'epic' not found
No suitable frames for recover()
> dropCpGs <- anno$Name[anno$AddressB != "" & !anno$AddressB %in% address.epic]
Error in anno$AddressB %in% address.epic : 
  object 'address.epic' not found
recover called non-interactively; frames dumped, use debugger() to view
> dropCpGs <- anno$Name[anno$AddressA != "" & !anno$AddressA %in% address.epic]
Error in anno$AddressA %in% address.epic : 
  object 'address.epic' not found
recover called non-interactively; frames dumped, use debugger() to view
> table(substr(dropCpGs, 1,2))
Error in substr(dropCpGs, 1, 2) : object 'dropCpGs' not found
Calls: table -> standardGeneric -> eval -> eval -> eval -> substr
recover called non-interactively; frames dumped, use debugger() to view
> 
> 
> ## Manifest package
> IlluminaHumanMethylationEPICmanifest <- do.call(IlluminaMethylationManifest,
+                                                 list(TypeI = manifestList$TypeI,
+                                                      TypeII = manifestList$TypeII,
+                                                      TypeControl = manifestList$TypeControl,
+                                                      TypeSnpI = manifestList$TypeSnpI,
+                                                      TypeSnpII = manifestList$TypeSnpII,
+                                                      annotation = "IlluminaHumanMethylationEPIC"))
> ## Annotation package
> anno$IlmnID <- NULL
> nam <- names(anno)
> names(nam) <- nam
> nam[c("AddressA_ID", "AddressB_ID", "AlleleA_ProbeSeq", "AlleleB_ProbeSeq",
+             "Infinium_Design_Type", "Next_Base", "Color_Channel")] <-  c("AddressA", "AddressB",
+                                                                          "ProbeSeqA", "ProbeSeqB",
+                                                                          "Type", "NextBase", "Color")
> 
> names(nam) <- NULL
> names(anno) <- nam
> rownames(anno) <- anno$Name
> anno <- anno[getManifestInfo(IlluminaHumanMethylationEPICmanifest, type = "locusNames"),]
> 
> Locations <- anno[, c("CHR", "MAPINFO")]
> names(Locations) <- c("chr", "pos")
> Locations$pos <- as.integer(Locations$pos)
> Locations$chr <- paste("chr", Locations$chr, sep = "")
> Locations$strand <- ifelse(anno$Strand == "F", "+", "-")
> table(Locations$chr, exclude = NULL)

 chr1 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19  chr2 chr20 
82097 42171 48952 44685 21070 29590 28769 37977 44468 14914 38595 64881 22982 
chr21 chr22  chr3  chr4  chr5  chr6  chr7  chr8  chr9  chrX  chrY  <NA> 
10311 18389 48928 36811 44761 54470 47624 38499 26211 19120   561     0 
> rownames(Locations) <- anno$Name
> Locations <- as(Locations, "DataFrame")
> 
> Manifest <- anno[, c("Name", "AddressA", "AddressB",
+                      "ProbeSeqA", "ProbeSeqB", "Type", "NextBase", "Color")]
> Manifest <- as(Manifest, "DataFrame")
> 
> Islands.UCSC <- anno[, c("UCSC_CpG_Islands_Name", "Relation_to_UCSC_CpG_Island")]
> names(Islands.UCSC) <- c("Islands_Name", "Relation_to_Island")
> Islands.UCSC <- as(Islands.UCSC, "DataFrame")
> Islands.UCSC$Relation_to_Island[Islands.UCSC$Relation_to_Island == ""] <- "OpenSea"
> table(Islands.UCSC$Relation_to_Island, exclude = NULL)

 Island N_Shelf N_Shore OpenSea S_Shelf S_Shore    <NA> 
 161598   32052   83474  488692   29759   71261       0 
> 
> SNPs.Illumina <- anno[, c("SNP_ID", "SNP_DISTANCE", "SNP_MinorAlleleFrequency")]
> SNPs.Illumina <- as(SNPs.Illumina, "DataFrame")
> 
> usedColumns <- c(names(Manifest), names(SNPs.Illumina), 
+                  c("CHR", "MAPINFO", "Strand",
+                    "Chromosome_36", "Coordinate_36", "Genome_Build"),
+                  c("UCSC_CpG_Islands_Name", "Relation_to_UCSC_CpG_Island"))
> Other <- anno[, setdiff(names(anno), usedColumns)]
> nam <- names(Other)
> nam <- sub("_NAME", "_Name", nam)
> nam[nam == "X450k_Enhancer"] <- "Methyl450_Enhancer"
> nam
 [1] "Forward_Sequence"                     
 [2] "SourceSeq"                            
 [3] "UCSC_RefGene_Name"                    
 [4] "UCSC_RefGene_Accession"               
 [5] "UCSC_RefGene_Group"                   
 [6] "Phantom4_Enhancers"                   
 [7] "Phantom5_Enhancers"                   
 [8] "DMR"                                  
 [9] "Methyl450_Enhancer"                   
[10] "HMM_Island"                           
[11] "Regulatory_Feature_Name"              
[12] "Regulatory_Feature_Group"             
[13] "GencodeBasicV12_Name"                 
[14] "GencodeBasicV12_Accession"            
[15] "GencodeBasicV12_Group"                
[16] "GencodeCompV12_Name"                  
[17] "GencodeCompV12_Accession"             
[18] "GencodeCompV12_Group"                 
[19] "DNase_Hypersensitivity_Name"          
[20] "DNase_Hypersensitivity_Evidence_Count"
[21] "OpenChromatin_Name"                   
[22] "OpenChromatin_Evidence_Count"         
[23] "TFBS_Name"                            
[24] "TFBS_Evidence_Count"                  
[25] "Methyl27_Loci"                        
[26] "Methyl450_Loci"                       
[27] "Random_Loci"                          
> Other <- as(Other, "DataFrame")
> 
> ## We now use an exisitng grSnp object containing a GRanges of relevant SNPs.
> ## This is created in a separate script
> 
> ##
> ## SNP overlap
> ##
> 
> map <- cbind(Locations, Manifest)
> map <- GRanges(seqnames = map$chr, ranges = IRanges(start = map$pos, width = 1),
+                Strand = map$strand, Type = map$Type)
> map <- minfi:::.getProbePositionsDetailed(map)
> names(map) <- rownames(Locations)
> 
> ## dbSNP
> load("extdata/grSnp147CommonSingle.rda")
> SNPs.147CommonSingle <- minfi:::.doSnpOverlap(map, grSnp147CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp146CommonSingle.rda")
> SNPs.146CommonSingle <- minfi:::.doSnpOverlap(map, grSnp146CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp144CommonSingle.rda")
> SNPs.144CommonSingle <- minfi:::.doSnpOverlap(map, grSnp144CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp142CommonSingle.rda")
> SNPs.142CommonSingle <- minfi:::.doSnpOverlap(map, grSnp142CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp141CommonSingle.rda")
> SNPs.141CommonSingle <- minfi:::.doSnpOverlap(map, grSnp141CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp138CommonSingle.rda")
> SNPs.138CommonSingle <- minfi:::.doSnpOverlap(map, grSnp138CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp137CommonSingle.rda")
> SNPs.137CommonSingle <- minfi:::.doSnpOverlap(map, grSnp137CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp135CommonSingle.rda")
> SNPs.135CommonSingle <- minfi:::.doSnpOverlap(map, grSnp135CommonSingle)
removing Snps with width != 1
> load("extdata/grSnp132CommonSingle.rda")
> SNPs.132CommonSingle <- minfi:::.doSnpOverlap(map, grSnp132CommonSingle)
removing Snps with width != 1
> 
> annoNames <- c("Locations", "Manifest", "SNPs.Illumina", "SNPs.147CommonSingle", "SNPs.146CommonSingle",
+                "SNPs.144CommonSingle", "SNPs.142CommonSingle", "SNPs.141CommonSingle",
+                "SNPs.138CommonSingle", "SNPs.137CommonSingle", "SNPs.135CommonSingle",
+                "SNPs.132CommonSingle", "Islands.UCSC", "Other")
> for(nam in annoNames) {
+     cat(nam, "\n")
+     save(list = nam, file = file.path("../../data", paste(nam, "rda", sep = ".")), compress = "xz")
+ }
Locations 
Manifest 
SNPs.Illumina 
SNPs.147CommonSingle 
SNPs.146CommonSingle 
SNPs.144CommonSingle 
SNPs.142CommonSingle 
SNPs.141CommonSingle 
SNPs.138CommonSingle 
SNPs.137CommonSingle 
SNPs.135CommonSingle 
SNPs.132CommonSingle 
Islands.UCSC 
Other 
> annoStr <- c(array = "IlluminaHumanMethylationEPIC",
+              annotation = "ilm10b2",
+              genomeBuild = "hg19")
> defaults <- c("Locations", "Manifest", "SNPs.137CommonSingle", "Islands.UCSC", "Other")
> pkgName <- sprintf("%sanno.%s.%s", annoStr["array"], annoStr["annotation"],
+                     annoStr["genomeBuild"])
> 
> annoObj <- IlluminaMethylationAnnotation(objectNames = annoNames, annotation = annoStr,
+                               defaults = defaults, packageName = pkgName)
> 
> assign(pkgName, annoObj)
> save(list = pkgName,
+      file = file.path("../../data", paste(pkgName, "rda", sep = ".")), compress = "xz")
> sessionInfo()
R version 3.3.1 Patched (2016-09-30 r71426)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Red Hat Enterprise Linux Server release 6.6 (Santiago)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats4    parallel  stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] illuminaio_0.15.1           minfi_1.19.15              
 [3] bumphunter_1.13.1           locfit_1.5-9.1             
 [5] iterators_1.0.8             foreach_1.4.3              
 [7] Biostrings_2.41.4           XVector_0.13.7             
 [9] SummarizedExperiment_1.3.82 GenomicRanges_1.25.94      
[11] GenomeInfoDb_1.9.13         IRanges_2.7.16             
[13] S4Vectors_0.11.18           lattice_0.20-34            
[15] Biobase_2.33.3              BiocGenerics_0.19.2        

loaded via a namespace (and not attached):
 [1] genefilter_1.55.2       splines_3.3.1           beanplot_1.2           
 [4] rtracklayer_1.33.12     GenomicFeatures_1.25.20 chron_2.3-47           
 [7] XML_3.98-1.4            survival_2.39-5         DBI_0.5-1              
[10] BiocParallel_1.7.8      RColorBrewer_1.1-2      registry_0.3           
[13] rngtools_1.2.4          doRNG_1.6               matrixStats_0.50.2     
[16] plyr_1.8.4              pkgmaker_0.22           stringr_1.1.0          
[19] zlibbioc_1.19.0         codetools_0.2-14        biomaRt_2.29.2         
[22] AnnotationDbi_1.35.4    preprocessCore_1.35.0   Rcpp_0.12.7            
[25] xtable_1.8-2            openssl_0.9.4           limma_3.29.21          
[28] base64_2.0              annotate_1.51.1         Rsamtools_1.25.2       
[31] digest_0.6.10           stringi_1.1.2           nor1mix_1.2-2          
[34] grid_3.3.1              GEOquery_2.39.4         quadprog_1.5-5         
[37] tools_3.3.1             bitops_1.0-6            magrittr_1.5           
[40] siggenes_1.47.0         RCurl_1.95-4.8          RSQLite_1.0.0          
[43] MASS_7.3-45             Matrix_1.2-7.1          data.table_1.9.6       
[46] httr_1.2.1              reshape_0.8.5           R6_2.1.3               
[49] mclust_5.2              GenomicAlignments_1.9.6 multtest_2.29.0        
[52] nlme_3.1-128           
> q(save = "no")
> proc.time()
    user   system  elapsed 
1176.418   11.937 1194.486 
